{
  "type": "object",
  "properties": {
    "ruleDefinitions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PedagogRuleSerializable"
      }
    },
    "sessionRules": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/DebugSessionNamedRules"
      }
    }
  },
  "required": [
    "ruleDefinitions",
    "sessionRules"
  ],
  "definitions": {
    "PedagogRuleSerializable": {
      "type": "object",
      "properties": {
        "priority": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "event": {
          "$ref": "#/definitions/PedagogRuleEvent"
        },
        "conditions": {
          "$ref": "#/definitions/PedagogTopLevelCondition"
        }
      },
      "required": [
        "conditions",
        "event",
        "name"
      ]
    },
    "PedagogRuleEvent": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "accept"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "stopRules"
            }
          },
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setPedagogId"
            },
            "params": {
              "$ref": "#/definitions/SetPedagogIdParams"
            }
          },
          "required": [
            "params",
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "setFetchChildren"
            },
            "params": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "boolean"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "required": [
            "params",
            "type"
          ]
        }
      ]
    },
    "SetPedagogIdParams": {
      "type": "object",
      "properties": {
        "fact": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/Record<string,any>"
        },
        "regexp": {
          "$ref": "#/definitions/RegExpParams"
        }
      },
      "required": [
        "fact"
      ]
    },
    "Record<string,any>": {
      "type": "object"
    },
    "RegExpParams": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "flags": {
          "type": "string"
        }
      },
      "required": [
        "pattern"
      ]
    },
    "PedagogTopLevelCondition": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "condition": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "priority": {
              "type": "number"
            }
          },
          "required": [
            "condition"
          ]
        },
        {
          "$ref": "#/definitions/PedagogAllConditions"
        },
        {
          "$ref": "#/definitions/PedagogAnyConditions"
        },
        {
          "$ref": "#/definitions/PedagogNotConditions"
        }
      ]
    },
    "PedagogAllConditions": {
      "allOf": [
        {
          "$ref": "#/definitions/AllConditions"
        },
        {
          "type": "object",
          "properties": {
            "all": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PedagogNestedCondition"
              }
            }
          },
          "required": [
            "all"
          ]
        }
      ]
    },
    "NestedCondition": {
      "anyOf": [
        {
          "$ref": "#/definitions/AllConditions"
        },
        {
          "type": "object",
          "properties": {
            "any": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NestedCondition"
              }
            },
            "name": {
              "type": "string"
            },
            "priority": {
              "type": "number"
            }
          },
          "required": [
            "any"
          ]
        },
        {
          "type": "object",
          "properties": {
            "not": {
              "$ref": "#/definitions/NestedCondition"
            },
            "name": {
              "type": "string"
            },
            "priority": {
              "type": "number"
            }
          },
          "required": [
            "not"
          ]
        },
        {
          "type": "object",
          "properties": {
            "condition": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "priority": {
              "type": "number"
            }
          },
          "required": [
            "condition"
          ]
        },
        {
          "$ref": "#/definitions/ConditionProperties"
        }
      ]
    },
    "AllConditions": {
      "type": "object",
      "properties": {
        "all": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedCondition"
          }
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "number"
        }
      },
      "required": [
        "all"
      ]
    },
    "ConditionProperties": {
      "type": "object",
      "properties": {
        "fact": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "value": {},
        "path": {
          "type": "string"
        },
        "priority": {
          "type": "number"
        },
        "params": {
          "$ref": "#/definitions/Record<string,any>"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "fact",
        "operator",
        "value"
      ]
    },
    "PedagogNestedCondition": {
      "anyOf": [
        {
          "allOf": [
            {
              "$ref": "#/definitions/AllConditions"
            },
            {
              "type": "object",
              "properties": {
                "operator": {
                  "$ref": "#/definitions/PedagogOperatorName"
                }
              },
              "required": [
                "operator"
              ]
            }
          ]
        },
        {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "any": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NestedCondition"
                  }
                },
                "name": {
                  "type": "string"
                },
                "priority": {
                  "type": "number"
                }
              },
              "required": [
                "any"
              ]
            },
            {
              "type": "object",
              "properties": {
                "operator": {
                  "$ref": "#/definitions/PedagogOperatorName"
                }
              },
              "required": [
                "operator"
              ]
            }
          ]
        },
        {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "not": {
                  "$ref": "#/definitions/NestedCondition"
                },
                "name": {
                  "type": "string"
                },
                "priority": {
                  "type": "number"
                }
              },
              "required": [
                "not"
              ]
            },
            {
              "type": "object",
              "properties": {
                "operator": {
                  "$ref": "#/definitions/PedagogOperatorName"
                }
              },
              "required": [
                "operator"
              ]
            }
          ]
        },
        {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "condition": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "priority": {
                  "type": "number"
                }
              },
              "required": [
                "condition"
              ]
            },
            {
              "type": "object",
              "properties": {
                "operator": {
                  "$ref": "#/definitions/PedagogOperatorName"
                }
              },
              "required": [
                "operator"
              ]
            }
          ]
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ConditionProperties"
            },
            {
              "type": "object",
              "properties": {
                "operator": {
                  "$ref": "#/definitions/PedagogOperatorName"
                }
              },
              "required": [
                "operator"
              ]
            }
          ]
        }
      ]
    },
    "PedagogOperatorName": {
      "description": "Operators that can be used with json-rules-engine,\nincluding our custom operators and the the built-in ones.\n(https://github.com/CacheControl/json-rules-engine/blob/master/docs/rules.md#operators)",
      "enum": [
        "contains",
        "defined",
        "doesNotContain",
        "endsWith",
        "equal",
        "greaterThan",
        "greaterThanInclusive",
        "in",
        "lessThan",
        "lessThanInclusive",
        "matchesRegExp",
        "notEndsWith",
        "notEqual",
        "notIn",
        "notMatchesRegExp",
        "notStartsWith",
        "startsWith",
        "undefined"
      ],
      "type": "string"
    },
    "PedagogAnyConditions": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "any": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NestedCondition"
              }
            },
            "name": {
              "type": "string"
            },
            "priority": {
              "type": "number"
            }
          },
          "required": [
            "any"
          ]
        },
        {
          "type": "object",
          "properties": {
            "any": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PedagogNestedCondition"
              }
            }
          },
          "required": [
            "any"
          ]
        }
      ]
    },
    "PedagogNotConditions": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "not": {
              "$ref": "#/definitions/NestedCondition"
            },
            "name": {
              "type": "string"
            },
            "priority": {
              "type": "number"
            }
          },
          "required": [
            "not"
          ]
        },
        {
          "type": "object",
          "properties": {
            "not": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PedagogNestedCondition"
              }
            }
          },
          "required": [
            "not"
          ]
        }
      ]
    },
    "DebugSessionNamedRules": {
      "type": "object",
      "properties": {
        "threadRules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stackFrameRules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scopeRules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variableRules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "scopeRules",
        "stackFrameRules",
        "threadRules",
        "variableRules"
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}